
//backup of EditProduct
import { TextField, Select, MenuItem, InputLabel, Button } from "@mui/material";
import appStyle from "../AppStyle.module.css";

export const EditProduct = () => {
  return (
    <div
      style={{
        fontFamily: "Roboto",
      }}
    >
      <div id={appStyle.heading}>
        <h1
          style={{
            fontSize: "35",
            fontFamily: "Roboto",
          }}
        >
          Edit Product
        </h1>
      </div>
      <form>
        <div className={appStyle.GridContainer}>
          <div className={appStyle.itemContainer}>
            <span>First Name</span>
            <TextField
              id="outlined-basic"
              // label="First Name"
              variant="outlined"
              fullWidth
              size="small"
            />
          </div>
          <div className={appStyle.itemContainer}>
            <span>Last Name</span>
            <TextField
              id="outlined-basic"
              // label="Last Name"
              variant="outlined"
              fullWidth
              size="small"
            />
          </div>
          <div className={appStyle.itemContainer}>
            <span>Category</span>
            <InputLabel id="CategoryList"></InputLabel>
            <Select
              style={{
                width: "20",
              }}
              labelId="CategoryList"
              id="demo-simple-select"
              //   value={age}
              // label="Category"
              fullWidth
              size="small"
            >
              {/* <MenuItem value={""}></MenuItem> */}
              <MenuItem value={"Bookcategory"}>Bookcategory</MenuItem>
              <MenuItem value={"Bookcategory"}>Bookcategory</MenuItem>
              <MenuItem value={"Bookcategory"}>Bookcategory</MenuItem>
            </Select>
          </div>
          <div className={appStyle.itemContainer}>
            <span>Description</span>
            <TextField
              id="outlined-multiline-flexible"
              // label="Description"
              fullWidth
              multiline
              maxRows={4}
              size="small"
            />
          </div>
          <div  style={{
            position:"relative",
            // border:"1px solid red",
            marginTop: "25px",
            alignItems:"center"
          }}>
            <label htmlFor="raised-button-file">
              <Button
                variant="raised"
                component="span"
                style={{
                  backgroundColor: "#F14d54",
                  color: "white",
                  height: "40px",
                width: "120px",
                zIndex:"1"
                }}
              >
                Upload
              </Button>
            </label>
            <input
              accept="image/*"
              //   className={classes.input}
              //   style={{ display:  }}
              id="raised-button-file"
              multiple
              type="file"
              style={{
                zIndex:"-1",
                position:"absolute",
                left:"25px",
                top: "10px"
              }}
            />
          </div>
          <br />
          {/* <div></div> */}

          <div style={{
            display:"flex",
            felxDirection:"row",
            columnGap: "1vh" 
          }}>
            <Button
              variant="raised"
              style={{
                backgroundColor: "#7dc12b",
                color: "white",
                height: "40px",
                width: "100px",
              }}
            >
              Save
            </Button>
            <Button
              variant="raised"
              style={{
                backgroundColor: "#F14d54",
                color: "white",
                height: "40px",
                width: "100px",
              }}
            >
              Cancel
            </Button>
          </div>
        </div>
      </form>
    </div>
  );
};

//backup for registration
import { TextField, Select, MenuItem, InputLabel, Button } from "@mui/material";
import appStyle from "../AppStyle.module.css";
import { Formik } from "formik";
import * as Yup from "yup";

export const Registration = () => {
  const initialValue = {
    firstname: "",
    lastname: "",
    email: "",
    role: "",
  };
  const validateSchema = Yup.object().shape({
    firstname: Yup.string().label("First Name").min(3, "too short").required(),
    lastname: Yup.string().label("Last Name").min(3, "too short").required(),
    email: Yup.string().label("Email").email("Enter Valid email").required(),
    role: Yup.string().label("Role").required(),
    password: Yup.string()
      .oneOf([Yup.ref("password"), null])
      .matches(
        /[A-Z]/,
        "Password must require atleast 1 capital letter character"
      )
      .matches(
        /[a-z]/,
        "Password must require atleast 1 small letter character"
      )
      .min(8, "Password must require minimum 8 character")
      .required("Please provide a validÂ password"),
    cpassword: Yup.string()
      .label("confirm password")
      .required()
      .oneOf([Yup.ref("password"), null], "Passwords must match"),
  });

  function onClickSubmit(value) {
    console.log("Form Submitted.....");
    console.log(value);
  }
  return (
    <div
      style={{
        fontFamily: "Roboto",
        fontSize: "15px",
      }}
    >
      <div id={appStyle.heading}>
        <h1
          style={{
            fontSize: "35",
            fontFamily: "Roboto",
          }}
        >
          Create An Account
        </h1>
      </div>
      <Formik
        initialValues={initialValue}
        validationSchema={validateSchema}
        onSubmit={onClickSubmit}
      >
        {({
          values,
          errors,
          touched,
          handleSubmit,
          handleChange,
          handleBlur,
        }) => (
          <form onSubmit={handleSubmit}>
            <div className={appStyle.GridContainer}>
              <div className={appStyle.itemContainer}>
                <span>First Name*</span>
                <TextField
                  id="outlined-basic"
                  name="firstname"
                  // label="First Name"
                  variant="outlined"
                  fullWidth
                  size="small"
                  onChange={handleChange}
                  onBlur={handleBlur}
                />
                {touched.firstname && errors.firstname && (
                  <div className={appStyle.error}>{errors.firstname}</div>
                )}
              </div>
              <div className={appStyle.itemContainer}>
                <span>Last Name*</span>
                <TextField
                  id="outlined-basic"
                  name="lastname"
                  // label="Last Name"
                  variant="outlined"
                  fullWidth
                  size="small"
                  onChange={handleChange}
                  onBlur={handleBlur}
                />
                {touched.lastname && errors.lastname && (
                  <div className={appStyle.error}>{errors.lastname}</div>
                )}
              </div>
              <div className={appStyle.itemContainer}>
                <span>Email</span>
                <TextField
                  id="outlined-basic"
                  name="email"
                  // label="Last Name"
                  variant="outlined"
                  fullWidth
                  size="small"
                  onChange={handleChange}
                  onBlur={handleBlur}
                />
                {touched.email && errors.email && (
                  <div className={appStyle.error}>{errors.email}</div>
                )}
              </div>
              <div className={appStyle.itemContainer}>
                <span>Role</span>
                <InputLabel id="role"></InputLabel>
                <Select
                  defaultValue=""
                  name="role"
                  style={{
                    width: "20",
                  }}
                  labelId="CategoryList"
                  id="demo-simple-select"
                  //   value={age}
                  // label="Category"
                  fullWidth
                  size="small"
                  onChange={handleChange}
                  onBlur={handleBlur}
                >
                  {/* <MenuItem value={""}></MenuItem> */}
                  <MenuItem value={"Seller"}>Seller</MenuItem>
                  <MenuItem value={"Buyer"}>Buyer</MenuItem>
                </Select>
                {touched.role && errors.role && (
                  <div className={appStyle.error}>{errors.role}</div>
                )}
              </div>
              <div>
                <h4>Login Information</h4>
              </div>
              <br />
              <div
                style={{
                  marginTop: "-40px",
                }}
              >
                <span>Password*</span>
                <TextField
                  id="outlined-basic"
                  name="password"
                  type="password"
                  // label="First Name"
                  variant="outlined"
                  fullWidth
                  size="small"
                  onChange={handleChange}
                  onBlur={handleBlur}
                />
                {touched.password && errors.password && (
                  <div className={appStyle.error}>{errors.password}</div>
                )}
              </div>

              <div
                style={{
                  marginTop: "-40px",
                }}
              >
                <span>Confirm Password*</span>
                <TextField
                  id="outlined-basic"
                  name="cpassword"
                  type="password"
                  // label="First Name"
                  variant="outlined"
                  fullWidth
                  size="small"
                  onChange={handleChange}
                  onBlur={handleBlur}
                />
                {touched.cpassword && errors.cpassword && (
                  <div className={appStyle.error}>{errors.cpassword}</div>
                )}
              </div>

              <div
                style={{
                  display: "flex",
                  felxDirection: "row",
                  columnGap: "1vh",
                }}
              >
                <Button
                  variant="raised"
                  type="submit"
                  style={{
                    backgroundColor: "#F14d54",
                    color: "white",
                    height: "45px",
                    width: "134px",
                    marginTop: "25px",
                  }}
                >
                  Register
                </Button>
              </div>
            </div>
          </form>
        )}
      </Formik>
    </div>
  );
};
